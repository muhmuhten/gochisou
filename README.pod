=head1 gochisou - Yet Another 3DSFE Save (De)compressor

L<FEAST|https://github.com/SciresM/FEAST> except it actually works for JPN
Awakening (which has different framing from international Awakening and
subsequent titles mostly because some text fields had to be expanded to allow
for longer names and chapter titles).

(Translator's note: gochisou means feast)

(Except the interface is more like L<FEST|https://github.com/RainThunder/FEST>,
but then what am I going to name it, "matsuri"?)

=head2 why this

It and compiles and runs readily on non-Windows systems without a C# runtime.

=head2 Caveats

The included Huffman encoder is bespoke and probably buggy; I'm very not sure
I've ironed out all the edge cases in table generation.

Unlike every other tool of its kind, gochisou contains no code derived from
L<CUE's compressors|http://www.romhacking.net/utilities/826/>. In particular,
I believe my Huffman encoder's approach to table generation is more robust and
achieves optimality in a few cases where CUE's doesn't. It is also likely to be
horribly buggy; I'm very not confident that there aren't any edge cases.

(I have a numerical argument that suggests that the I<approach> is valid for
Huffman trees with minimum leaf depth up to 9, but I'm a lot less certain that
I've got the implementation details quite right.)

Due to limitations of my brain does not have microservice architecture, it is
not exactly a clean room reimplementation, though.
